// <auto-generated />
using System;
using GeneralStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeneralStore.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20241207081555_secondCreate")]
    partial class secondCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GeneralStore.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateListed")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("InStock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Category = "Furniture",
                            DateListed = new DateTime(2024, 12, 7, 0, 15, 55, 590, DateTimeKind.Local).AddTicks(5561),
                            Description = "A nice hardwood desk",
                            InStock = true,
                            Name = "Hardwood Desk",
                            Price = 150.00m,
                            StockQuantity = 10,
                            Weight = 0.0m
                        },
                        new
                        {
                            ItemId = 2,
                            Category = "Furniture",
                            DateListed = new DateTime(2024, 12, 7, 0, 15, 55, 590, DateTimeKind.Local).AddTicks(5565),
                            Description = "Chair made of wood.",
                            InStock = true,
                            Name = "Hardwood Chair",
                            Price = 20.00m,
                            StockQuantity = 10,
                            Weight = 0.0m
                        },
                        new
                        {
                            ItemId = 3,
                            Category = "Lighting",
                            DateListed = new DateTime(2024, 12, 7, 0, 15, 55, 590, DateTimeKind.Local).AddTicks(5569),
                            Description = "Lamp Of Steel",
                            InStock = true,
                            Name = "Steel Lamp",
                            Price = 100.00m,
                            StockQuantity = 10,
                            Weight = 0.0m
                        },
                        new
                        {
                            ItemId = 4,
                            Category = "Tools",
                            DateListed = new DateTime(2024, 12, 7, 0, 15, 55, 590, DateTimeKind.Local).AddTicks(5573),
                            Description = "Basic Power Drill",
                            InStock = true,
                            Name = "Power Drill",
                            Price = 150.00m,
                            StockQuantity = 10,
                            Weight = 0.0m
                        });
                });

            modelBuilder.Entity("GeneralStore.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GeneralStore.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeneralStore.Models.Item", b =>
                {
                    b.HasOne("GeneralStore.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("GeneralStore.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
